% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_cube.R
\name{sits_cube.brick_cube}
\alias{sits_cube.brick_cube}
\title{Defines a cube from a set of image bricks}
\usage{
\method{sits_cube}{brick_cube}(
  type = "BRICK",
  ...,
  name = "brick_cube",
  satellite,
  sensor,
  timeline = NULL,
  bands = NULL,
  files = NULL
)
}
\arguments{
\item{type}{type of cube}

\item{...}{other parameters}

\item{name}{name of output data cube}

\item{satellite}{satellite}

\item{sensor}{sensor}

\item{timeline}{vector with timeline of the files}

\item{bands}{vector of bands associated to the files}

\item{files}{vector of file names for each band}
}
\value{
data cube
}
\description{
Defines a cube to retrieve data from a set of image files.
             All image files should have the same spatial resolution
             and same projection. Each input band
             has to be organised as a raster brick, and the
             number of input files must match the number of bands.
             All input files must have the same spatial resolution and
             share the same timeline (in order).
             The timeline for the cube must be provided.
}
\examples{

# Create a raster cube based on bricks
# inform the files that make up a raster brick with 392 time instances
files <- c(system.file("extdata/raster/mod13q1/sinop-crop-ndvi.tif",
    package = "sits"
))

# create a raster cube file based on the information about the files
raster_cube <- sits_cube(
    type = "BRICK",
    name = "Sinop-crop",
    satellite = "TERRA",
    sensor = "MODIS",
    timeline = timeline_modis_392,
    bands = "NDVI",
    files = files
)
}
